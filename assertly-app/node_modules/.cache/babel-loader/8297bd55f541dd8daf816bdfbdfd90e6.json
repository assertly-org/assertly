{"ast":null,"code":"import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers/reducer\";\nimport thunk from \"redux-thunk\";\nimport createMiddleware from \"./middleware/clientMiddleware\";\nimport api from \"./ApiClient\";\nexport var history = createBrowserHistory();\nexport default function configureStore(preloadedState) {\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var middleware = [thunk, routerMiddleware(history), createMiddleware(api)];\n  var enhancer = composeEnhancers(applyMiddleware.apply(void 0, middleware));\n  var rootReducer = createRootReducer(history);\n  var store = createStore(rootReducer, // root reducer with router state\n  preloadedState, enhancer);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducers/reducer\", function () {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return {\n    store: store,\n    history: history\n  };\n}","map":{"version":3,"sources":["/Users/zealotsd/Desktop/assertly/assertly-app/src/redux/configureStore.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","routerMiddleware","createRootReducer","thunk","createMiddleware","api","history","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","enhancer","rootReducer","store","module","hot","accept","replaceReducer"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,OAAO,GAAGT,oBAAoB,EAApC;AAEP,eAAe,SAASU,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CZ,OADjD;AAGA,MAAMa,UAAU,GAAG,CAACT,KAAD,EAAQF,gBAAgB,CAACK,OAAD,CAAxB,EAAmCF,gBAAgB,CAACC,GAAD,CAAnD,CAAnB;AACA,MAAMQ,QAAQ,GAAGJ,gBAAgB,CAACX,eAAe,MAAf,SAAmBc,UAAnB,CAAD,CAAjC;AAEA,MAAME,WAAW,GAAGZ,iBAAiB,CAACI,OAAD,CAArC;AAEA,MAAMS,KAAK,GAAGf,WAAW,CACvBc,WADuB,EACV;AACbN,EAAAA,cAFuB,EAGvBK,QAHuB,CAAzB;;AAMA,MAAIG,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,oBAAlB,EAAwC,YAAM;AAC5CH,MAAAA,KAAK,CAACI,cAAN,CAAqBjB,iBAAiB,CAACI,OAAD,CAAtC;AACD,KAFD;AAGD;;AAED,SAAO;AAAES,IAAAA,KAAK,EAALA,KAAF;AAAST,IAAAA,OAAO,EAAPA;AAAT,GAAP;AACD","sourcesContent":["import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers/reducer\";\nimport thunk from \"redux-thunk\";\nimport createMiddleware from \"./middleware/clientMiddleware\";\nimport api from \"./ApiClient\";\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const middleware = [thunk, routerMiddleware(history), createMiddleware(api)];\n  const enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n  const rootReducer = createRootReducer(history);\n\n  const store = createStore(\n    rootReducer, // root reducer with router state\n    preloadedState,\n    enhancer\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducers/reducer\", () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return { store, history };\n}\n"]},"metadata":{},"sourceType":"module"}