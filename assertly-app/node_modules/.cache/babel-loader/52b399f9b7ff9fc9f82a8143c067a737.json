{"ast":null,"code":"import _classCallCheck from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zealotsd/Desktop/assertly/assertly-app/src/ControlPanel/Reporter/index.tsx\";\nimport React, { Component } from 'react';\nimport './reporter.css';\nimport { getIframe } from '../../Runner/utils';\n\nvar Reporter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reporter, _Component);\n\n  function Reporter() {\n    _classCallCheck(this, Reporter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Reporter).apply(this, arguments));\n  }\n\n  _createClass(Reporter, [{\n    key: \"clickReplay\",\n    value: function clickReplay(e) {\n      var lastEventRaw = localStorage.getItem('lastEvent');\n\n      if (lastEventRaw) {\n        var lastEvent = JSON.parse(lastEventRaw);\n        console.log('last event: ', lastEvent);\n        var doc = getIframe();\n\n        if (!doc) {\n          console.error('no iframe');\n          return;\n        }\n\n        var element = doc.querySelector(lastEvent.selector);\n        console.log('element', element);\n\n        if (!element) {\n          console.warn('element removed before event could be replayed from selector: ', lastEvent.selector);\n          return false;\n        }\n\n        element.click();\n        return true;\n      }\n\n      console.warn('No prior event');\n      return false;\n    }\n  }, {\n    key: \"buildJestTest\",\n    value: function buildJestTest() {\n      var lastEventRaw = localStorage.getItem('lastEvent');\n\n      if (lastEventRaw) {\n        var lastEvent = JSON.parse(lastEventRaw);\n        console.log(lastEvent);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"assertly reporter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Assertly\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.clickReplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Replay last event\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.buildJestTest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Build test from last Component\"));\n    }\n  }]);\n\n  return Reporter;\n}(Component);\n\nexport default Reporter;","map":{"version":3,"sources":["/Users/zealotsd/Desktop/assertly/assertly-app/src/ControlPanel/Reporter/index.tsx"],"names":["React","Component","getIframe","Reporter","e","lastEventRaw","localStorage","getItem","lastEvent","JSON","parse","console","log","doc","error","element","querySelector","selector","warn","click","clickReplay","buildJestTest"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;;IAEMC,Q;;;;;;;;;;;;;gCACQC,C,EAAQ;AAClB,UAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;;AACA,UAAIF,YAAJ,EAAkB;AAChB,YAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAlB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,SAA5B;AACA,YAAMK,GAAG,GAAGX,SAAS,EAArB;;AACA,YAAI,CAACW,GAAL,EAAU;AACRF,UAAAA,OAAO,CAACG,KAAR,CAAc,WAAd;AACA;AACD;;AACD,YAAMC,OAAO,GAAGF,GAAG,CAACG,aAAJ,CAAkBR,SAAS,CAACS,QAA5B,CAAhB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBG,OAAvB;;AACA,YAAI,CAACA,OAAL,EAAc;AACZJ,UAAAA,OAAO,CAACO,IAAR,CAAa,gEAAb,EAA+EV,SAAS,CAACS,QAAzF;AACA,iBAAO,KAAP;AACD;;AAEDF,QAAAA,OAAO,CAACI,KAAR;AACA,eAAO,IAAP;AACD;;AAEDR,MAAAA,OAAO,CAACO,IAAR,CAAa,gBAAb;AACA,aAAO,KAAP;AACD;;;oCAEe;AACd,UAAMb,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAArB;;AACA,UAAIF,YAAJ,EAAkB;AAChB,YAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAlB;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHP,EAGY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHZ,EAKE;AACE,QAAA,OAAO,EAAE,KAAKY,WADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAWO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXP,EAWY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXZ,EAaE;AACE,QAAA,OAAO,EAAE,KAAKC,aADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAbF,CADF;AAqBD;;;;EAxDoBpB,S;;AA2DvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './reporter.css';\nimport { getIframe } from '../../Runner/utils';\n\nclass Reporter extends Component {\n  clickReplay(e: any) {\n    const lastEventRaw = localStorage.getItem('lastEvent');\n    if (lastEventRaw) {\n      const lastEvent = JSON.parse(lastEventRaw);\n      console.log('last event: ', lastEvent);\n      const doc = getIframe();\n      if (!doc) {\n        console.error('no iframe');\n        return;\n      }\n      const element = doc.querySelector(lastEvent.selector);\n      console.log('element', element);\n      if (!element) {\n        console.warn('element removed before event could be replayed from selector: ', lastEvent.selector);\n        return false;\n      }\n\n      element.click();\n      return true;\n    }\n\n    console.warn('No prior event');\n    return false;\n  }\n\n  buildJestTest() {\n    const lastEventRaw = localStorage.getItem('lastEvent');\n    if (lastEventRaw) {\n      const lastEvent = JSON.parse(lastEventRaw);\n      console.log(lastEvent);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"assertly reporter\">\n        Assertly\n\n        <br/><br/><br/>\n\n        <button\n          onClick={this.clickReplay}\n        >\n          Replay last event\n        </button>\n\n        <br/><br/><br/>\n\n        <button\n          onClick={this.buildJestTest}\n        >\n          Build test from last Component\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Reporter;\n"]},"metadata":{},"sourceType":"module"}