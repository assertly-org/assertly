{"ast":null,"code":"var _jsxFileName = \"/Users/zealotsd/Desktop/assertly/assertly-app/src/TestEditor/index.tsx\";\nimport React from 'react';\nimport Runner from '../Runner';\nimport Grid from '@material-ui/core/Grid';\nimport './styles.css'; // export default () => {return (<Runner/>)}\n\nexport default (function () {\n  // console.log('allen sucks')\n  // const [asserting, setAsserting] = useState<Boolean>(false);\n  // const [currentUrl, setCurrentUrl] = useState<String>('');\n  // const {events} = useSelector((state: any) => ({events: state.events.events}));\n  // const toggleAssert = (on: Boolean) => {\n  //   setAsserting(on);\n  //   (window as any).frames.runner.postMessage(JSON.stringify({assert: on}), '*');\n  // };\n  // useEffect(() => {\n  //   const lastEventWithUrl = events && events.length > 0 && events.reverse().find((evt: any) => evt.url);\n  //   const url = lastEventWithUrl && lastEventWithUrl.url;\n  //   if (url !== currentUrl)\n  //     setCurrentUrl(url);\n  // });  \n  return (// <Grid container spacing={2}>\n    //   <Grid container item xs={12} style={{padding: '15px 15px'}}>\n    //     <Grid item xs={4}>  \n    //       <Grid container alignItems=\"center\">\n    //         <Link to='/testsets'>\n    //           <BackIcon color=\"primary\" />\n    //         </Link>\n    //         <Divider orientation=\"vertical\" />\n    //         <Button  size=\"small\" color=\"default\">\n    //           <ReplayIcon color=\"primary\"/> Replay\n    //         </Button>\n    //         <Divider orientation=\"vertical\" />\n    //         <Button onClick={() => toggleAssert(!asserting)}  size=\"small\" color=\"default\">\n    //           {asserting ? <StopAssertIcon color=\"primary\"/> : <AssertIcon color=\"primary\"/>} Assert\n    //         </Button>\n    //       </Grid>         \n    //     </Grid>  \n    //     <Grid item xs={8}>\n    //         <input className=\"url-bar\" value={String(currentUrl)} disabled/>\n    //     </Grid>        \n    //   </Grid> \n    //   <Grid item xs={4}>   \n    //     <h3>Events</h3>     \n    //     <Reporter />\n    //   </Grid>\n    React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Runner\"), React.createElement(Runner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })) // </Grid>\n\n  );\n});","map":{"version":3,"sources":["/Users/zealotsd/Desktop/assertly/assertly-app/src/TestEditor/index.tsx"],"names":["React","Runner","Grid"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAGA,OAAOC,MAAP,MAAmB,WAAnB;AAWA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAO,cAAP,C,CAEA;;AACA,gBAAe,YAAM;AACnB;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,wBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA1BJ,CA8BE;;AA9BF;AAgCD,CApDD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport Reporter from '../Reporter';\nimport Runner from '../Runner';\n\nimport Button from '@material-ui/core/Button';\nimport {Link} from 'react-router-dom';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport Fab from '@material-ui/core/Fab';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport AssertIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport StopAssertIcon from '@material-ui/icons/HighlightOff';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport './styles.css';\n\n// export default () => {return (<Runner/>)}\nexport default () => {\n  // console.log('allen sucks')\n  // const [asserting, setAsserting] = useState<Boolean>(false);\n  // const [currentUrl, setCurrentUrl] = useState<String>('');\n  // const {events} = useSelector((state: any) => ({events: state.events.events}));\n  \n\n  // const toggleAssert = (on: Boolean) => {\n  //   setAsserting(on);\n  //   (window as any).frames.runner.postMessage(JSON.stringify({assert: on}), '*');\n  // };\n\n  // useEffect(() => {\n  //   const lastEventWithUrl = events && events.length > 0 && events.reverse().find((evt: any) => evt.url);\n  //   const url = lastEventWithUrl && lastEventWithUrl.url;\n    \n  //   if (url !== currentUrl)\n  //     setCurrentUrl(url);\n  // });  \n\n  return (\n    // <Grid container spacing={2}>\n    //   <Grid container item xs={12} style={{padding: '15px 15px'}}>\n    //     <Grid item xs={4}>  \n    //       <Grid container alignItems=\"center\">\n    //         <Link to='/testsets'>\n    //           <BackIcon color=\"primary\" />\n    //         </Link>\n    //         <Divider orientation=\"vertical\" />\n    //         <Button  size=\"small\" color=\"default\">\n    //           <ReplayIcon color=\"primary\"/> Replay\n    //         </Button>\n    //         <Divider orientation=\"vertical\" />\n    //         <Button onClick={() => toggleAssert(!asserting)}  size=\"small\" color=\"default\">\n    //           {asserting ? <StopAssertIcon color=\"primary\"/> : <AssertIcon color=\"primary\"/>} Assert\n    //         </Button>\n    //       </Grid>         \n    //     </Grid>  \n    //     <Grid item xs={8}>\n    //         <input className=\"url-bar\" value={String(currentUrl)} disabled/>\n    //     </Grid>        \n    //   </Grid> \n    //   <Grid item xs={4}>   \n    //     <h3>Events</h3>     \n    //     <Reporter />\n    //   </Grid>\n      <Grid item xs={8}>\n        <h3>Runner</h3>         \n        <Runner />\n      </Grid>\n    // </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}