{"ast":null,"code":"var _jsxFileName = \"/Users/zealotsd/Desktop/assertly/assertly-app/src/TestEditor/index.tsx\";\nimport React from 'react';\nimport Reporter from '../Reporter';\nimport Runner from '../Runner';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport BackIcon from '@material-ui/icons/ArrowBack';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport './styles.css'; // export default () => {return (<Runner/>)}\n\nexport default (function () {\n  console.log('allen sucks'); // const [asserting, setAsserting] = useState<Boolean>(false);\n  // const [currentUrl, setCurrentUrl] = useState<String>('');\n  // const {events} = useSelector((state: any) => ({events: state.events.events}));\n  // const toggleAssert = (on: Boolean) => {\n  //   setAsserting(on);\n  //   (window as any).frames.runner.postMessage(JSON.stringify({assert: on}), '*');\n  // };\n  // useEffect(() => {\n  //   const lastEventWithUrl = events && events.length > 0 && events.reverse().find((evt: any) => evt.url);\n  //   const url = lastEventWithUrl && lastEventWithUrl.url;\n  //   if (url !== currentUrl)\n  //     setCurrentUrl(url);\n  // });  \n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    style: {\n      padding: '15px 15px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/testsets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(BackIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"small\",\n    color: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ReplayIcon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \" Replay\"), React.createElement(Divider, {\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Events\"), React.createElement(Reporter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Runner\"), React.createElement(Runner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/zealotsd/Desktop/assertly/assertly-app/src/TestEditor/index.tsx"],"names":["React","Reporter","Runner","Button","Link","ReplayIcon","BackIcon","Divider","Grid","console","log","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAGA,OAAOC,QAAP,MAAqB,8BAArB;AAGA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAO,cAAP,C,CAEA;;AACA,gBAAe,YAAM;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADmB,CAEnB;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,MAAD;AAAS,IAAA,IAAI,EAAC,OAAd;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,YALF,EAQE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF,CADF,EAqBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBF,EAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAzBF,CADF;AAgCD,CApDD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport Reporter from '../Reporter';\nimport Runner from '../Runner';\n\nimport Button from '@material-ui/core/Button';\nimport {Link} from 'react-router-dom';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport Fab from '@material-ui/core/Fab';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport AssertIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport StopAssertIcon from '@material-ui/icons/HighlightOff';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport './styles.css';\n\n// export default () => {return (<Runner/>)}\nexport default () => {\n  console.log('allen sucks')\n  // const [asserting, setAsserting] = useState<Boolean>(false);\n  // const [currentUrl, setCurrentUrl] = useState<String>('');\n  // const {events} = useSelector((state: any) => ({events: state.events.events}));\n  \n\n  // const toggleAssert = (on: Boolean) => {\n  //   setAsserting(on);\n  //   (window as any).frames.runner.postMessage(JSON.stringify({assert: on}), '*');\n  // };\n\n  // useEffect(() => {\n  //   const lastEventWithUrl = events && events.length > 0 && events.reverse().find((evt: any) => evt.url);\n  //   const url = lastEventWithUrl && lastEventWithUrl.url;\n    \n  //   if (url !== currentUrl)\n  //     setCurrentUrl(url);\n  // });  \n\n  return (\n    <Grid container spacing={2}>\n      <Grid container item xs={12} style={{padding: '15px 15px'}}>\n        <Grid item xs={4}>  \n          <Grid container alignItems=\"center\">\n            <Link to='/testsets'>\n              <BackIcon color=\"primary\" />\n            </Link>\n            <Divider orientation=\"vertical\" />\n            <Button  size=\"small\" color=\"default\">\n              <ReplayIcon color=\"primary\"/> Replay\n            </Button>\n            <Divider orientation=\"vertical\" />\n            {/* <Button onClick={() => toggleAssert(!asserting)}  size=\"small\" color=\"default\">\n              {asserting ? <StopAssertIcon color=\"primary\"/> : <AssertIcon color=\"primary\"/>} Assert\n            </Button> */}\n          </Grid>         \n        </Grid>  \n        {/* <Grid item xs={8}>\n            <input className=\"url-bar\" value={String(currentUrl)} disabled/>\n        </Grid>         */}\n      </Grid> \n      <Grid item xs={4}>   \n        <h3>Events</h3>     \n        <Reporter />\n      </Grid>\n      <Grid item xs={8}>\n        <h3>Runner</h3>         \n        <Runner />\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}