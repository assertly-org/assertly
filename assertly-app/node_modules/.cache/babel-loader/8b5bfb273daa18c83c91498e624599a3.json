{"ast":null,"code":"import _classCallCheck from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zealotsd/Desktop/assertly/assertly-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zealotsd/Desktop/assertly/assertly-app/src/Reporter/Reporter.tsx\";\nimport React, { Component } from 'react';\nimport './reporter.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport MouseIcon from '@material-ui/icons/MouseSharp';\nimport HttpIcon from '@material-ui/icons/Http';\nimport Divider from '@material-ui/core/Divider';\nimport { upperCaseFirstLetter } from '../utils/string';\n\nvar Reporter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reporter, _Component);\n\n  function Reporter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reporter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reporter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getTestSetEntries = function () {\n      _this.props.getTestSetEntries();\n    };\n\n    return _this;\n  }\n\n  _createClass(Reporter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"message\", this.getTestSetEntries);\n      this.getTestSetEntries();\n    }\n  }, {\n    key: \"prettifyTag\",\n    value: function prettifyTag(tag) {\n      switch (tag.toLowerCase()) {\n        case 'a':\n          return 'Link';\n\n        default:\n          return upperCaseFirstLetter(tag);\n      }\n    }\n  }, {\n    key: \"generateSecondaryText\",\n    value: function generateSecondaryText(payload) {\n      // const component =     \n      return \"\".concat(payload.tagType ? \"\".concat(upperCaseFirstLetter(payload.tagType), \" \") : '').concat(this.prettifyTag(payload.tagName)).concat(payload.textContent ? ' \"' + payload.textContent + '\"' : '');\n    }\n  }, {\n    key: \"getIconFromAction\",\n    value: function getIconFromAction(action) {\n      switch (action) {\n        case 'click':\n        case 'select':\n          return React.createElement(MouseIcon, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n\n        case 'change':\n        default:\n          return React.createElement(KeyboardIcon, {\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var events = this.props.events;\n      var firstEventWithUrl = events.length > 0 && events.find(function (evt) {\n        return evt.url;\n      });\n      var initialUrl = firstEventWithUrl && firstEventWithUrl.url;\n      return React.createElement(\"div\", {\n        className: \"events-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(List, {\n        dense: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, events.length > 0 && React.createElement(React.Fragment, null, React.createElement(ListItem, {\n        className: \"event-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(HttpIcon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Initial URL\",\n        secondary: initialUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), events.filter(function (evt) {\n        return evt.event_payload;\n      }).map(function (event, key) {\n        return React.createElement(\"span\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, key != 0 && event.url !== events[key - 1].url && React.createElement(React.Fragment, null, React.createElement(ListItem, {\n          className: \"event-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(HttpIcon, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: \"URL Change\",\n          secondary: event.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        })), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })), React.createElement(ListItem, {\n          key: key,\n          className: \"event-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, _this2.getIconFromAction(event.event_payload.action)), React.createElement(ListItemText, {\n          primary: upperCaseFirstLetter(event.event_payload.action),\n          secondary: _this2.generateSecondaryText(event.event_payload),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return Reporter;\n}(Component);\n\nexport default Reporter;","map":{"version":3,"sources":["/Users/zealotsd/Desktop/assertly/assertly-app/src/Reporter/Reporter.tsx"],"names":["React","Component","List","ListItem","ListItemIcon","ListItemText","KeyboardIcon","MouseIcon","HttpIcon","Divider","upperCaseFirstLetter","Reporter","getTestSetEntries","props","window","addEventListener","tag","toLowerCase","payload","tagType","prettifyTag","tagName","textContent","action","events","firstEventWithUrl","length","find","evt","url","initialUrl","filter","event_payload","map","event","key","getIconFromAction","generateSecondaryText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './reporter.css';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport MouseIcon from '@material-ui/icons/MouseSharp';\nimport HttpIcon from '@material-ui/icons/Http';\nimport Divider from '@material-ui/core/Divider';\nimport {upperCaseFirstLetter} from '../utils/string';\nimport {EventTypes} from '../Types/events';\n\ntype Props = {\n  events: any;\n  getTestSetEntries: Function;\n};\n\n\nclass Reporter extends Component<Props> {\n  componentDidMount() {    \n    window.addEventListener(\"message\", this.getTestSetEntries); \n    this.getTestSetEntries();\n  }\n\n  getTestSetEntries = () => {\n    this.props.getTestSetEntries();\n  };\n\n  prettifyTag(tag: string) {\n    switch(tag.toLowerCase()) {\n      case 'a':\n        return 'Link';\n      default: \n        return upperCaseFirstLetter(tag);  \n    }\n  }\n\n  generateSecondaryText(payload: any) : String {\n    \n    // const component =     \n    return `${payload.tagType ? `${upperCaseFirstLetter(payload.tagType)} ` : ''}${this.prettifyTag(payload.tagName)}${payload.textContent ? ' \"'+payload.textContent+'\"' : ''}`\n  }\n\n  getIconFromAction(action : EventTypes) : any {\n    switch(action) {\n      case 'click':\n      case 'select':\n        return <MouseIcon color=\"primary\" />;\n      case 'change':\n      default:  \n        return <KeyboardIcon color=\"primary\" />;\n    }\n  }\n\n  render() {\n    const { events } = this.props;\n\n    const firstEventWithUrl = events.length > 0 && events.find((evt: any) => evt.url);\n    const initialUrl = firstEventWithUrl && firstEventWithUrl.url;\n\n    return (\n          <div className=\"events-list\">\n          <List dense>\n            {\n              events.length > 0 &&\n              <>\n                <ListItem className=\"event-item\">\n                  <ListItemIcon>\n                      <HttpIcon color=\"primary\"/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Initial URL\" secondary={initialUrl}  />\n                </ListItem>\n                <Divider/>\n              {\n                events.filter((evt: any) => evt.event_payload).map((event: any, key: number) => (\n                <span key={key}>\n                  {\n                    key != 0 && event.url !== events[key - 1].url &&\n                    <>\n                      <ListItem className=\"event-item\">\n                        <ListItemIcon>\n                            <HttpIcon color=\"primary\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"URL Change\" secondary={event.url}  />\n                      </ListItem>\n                      <Divider/>\n                    </>\n                  }\n                  <ListItem key={key} className=\"event-item\">\n                    <ListItemIcon>\n                        {this.getIconFromAction(event.event_payload.action)}\n                    </ListItemIcon>\n                    <ListItemText primary={upperCaseFirstLetter(event.event_payload.action)} secondary={this.generateSecondaryText(event.event_payload)} />\n                  </ListItem>\n                  <Divider/>\n                </span>\n                ))}\n              </>\n              }\n          </List>\n          </div>\n    );\n  }\n}\n\nexport default Reporter;\n"]},"metadata":{},"sourceType":"module"}