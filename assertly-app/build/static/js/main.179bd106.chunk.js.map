{"version":3,"sources":["redux/actions/events.js","redux/reducers/events.js","redux/createReducer.js","redux/reducers/reducer.js","config.js","redux/ApiClient.js","redux/configureStore.js","utils/string.ts","Reporter/Reporter.tsx","Reporter/index.tsx","Runner/index.tsx","Runner/utils.ts","TestEditor/index.tsx","App.tsx","redux/middleware/clientMiddleware.js","index.tsx"],"names":["GET_TEST_SET_EVENTS","GET_TEST_SET_EVENTS_SUCCESS","GET_TEST_SET_EVENTS_FAIL","createReducer","initialState","handlers","state","arguments","length","undefined","action","hasOwnProperty","type","loading","events","_createReducer","Object","defineProperty","EventActions","objectSpread","payload","rootReducer","history","combineReducers","router","connectRouter","environment","apiHost","assign","use_redux_devtools","apiTimeout","response","deadline","ApiError","message","data","status","isObject","JSON","parse","e","this","toString","concat","stringify","fetchResource","path","userOptions","defaultHeaders","Content-Type","token","localStorage","getItem","authorization","params","options","mode","cache","credentials","redirect","referrer","headers","query","obj","key","isEmpty","keys","map","join","url","match","adjustedPath","config","formatUrl","isFile","body","File","fetch","then","responseObject","text","json","parsedResponse","catch","error","createBrowserHistory","upperCaseFirstLetter","str","charAt","toUpperCase","slice","toLowerCase","Reporter","getTestSetEntries","_this","props","window","addEventListener","tag","tagType","prettifyTag","tagName","textContent","react_default","a","createElement","MouseSharp_default","color","Keyboard_default","_this2","firstEventWithUrl","find","evt","initialUrl","className","List","dense","Fragment","ListItem","ListItemIcon","Http_default","ListItemText","primary","secondary","Divider","filter","event_payload","event","getIconFromAction","generateSecondaryText","Component","dispatchProps","account","project","testSet","types","promise","client","connect","Runner","receiveMessage","isJson","id","name","src","TestEditor","_useState","useState","_useState2","slicedToArray","asserting","setAsserting","_useState3","_useState4","currentUrl","setCurrentUrl","useSelector","useEffect","lastEventWithUrl","reverse","Grid","container","spacing","item","xs","style","padding","alignItems","react_router_dom","to","ArrowBack_default","orientation","Button","size","Replay_default","onClick","on","frames","runner","postMessage","assert","HighlightOff_default","AssignmentTurnedIn_default","value","String","disabled","src_Reporter","src_Runner","App","react_redux_es","store","esm","react_router","exact","component","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","routerMiddleware","api","_ref","dispatch","getState","next","rest","objectWithoutProperties","_types","REQUEST","SUCCESS","FAILURE","actionPromise","enhancer","applyMiddleware","apply","createRootReducer","createStore","configureStore","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oUAAaA,EAAsB,sBACtBC,EAA8B,8BAC9BC,EAA2B,4BCCxC,IAKeC,ECRA,SAAuBC,EAAcC,GAClD,OAAO,WAA+C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBH,EAAcM,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAIJ,EAASM,eAAeD,EAAOE,MAC1BP,EAASK,EAAOE,MAAMN,EAAOI,GAE7BJ,GDGEH,CALM,CACnBU,SAAS,EACTC,OAAQ,KAGkBC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACzBG,EAAmC,SAAAZ,GAAK,OAAAU,OAAAG,EAAA,EAAAH,CAAA,GACpCV,EADoC,CAEvCO,SAAS,MAHeG,OAAAC,EAAA,EAAAD,CAAAD,EAKzBG,EAA2C,SAACZ,EAAOI,GAClD,OAAOM,OAAAG,EAAA,EAAAH,CAAA,GACFV,EADL,CAEEO,SAAS,EACTC,OAAQJ,EAAOU,YATOJ,OAAAC,EAAA,EAAAD,CAAAD,EAYzBG,EAAwC,SAACZ,EAAOI,GAC/C,OAAOM,OAAAG,EAAA,EAAAH,CAAA,GACFV,EADL,CAEEO,SAAS,MAfaE,IEEbM,EANK,SAAAC,GAAO,OACzBC,YAAgB,CACdT,SACAU,OAAQC,YAAcH,8BCP1B,IAAMI,EAOQ,CACVC,QAAO,QAIIX,SAAOY,OACpB,CACEC,oBAAoB,EACpBC,WAAY,CACVC,SAAU,KACVC,SAAU,MAGdN,GCMK,SAASO,EAASC,EAASC,EAAMC,GACtC,IAAIL,EAAW,KACXM,GAAW,EAGf,IACEN,EAAWO,KAAKC,MAAMJ,GACtBE,GAAW,EACX,MAAOG,GACPT,EAAWI,EAGbM,KAAKV,SAAWA,EAChBU,KAAKP,QAAUA,EACfO,KAAKL,OAASA,EACdK,KAAKC,SAAW,WACd,SAAAC,OAAUF,KAAKP,QAAf,iBAAAS,OACEN,EAAWC,KAAKM,UAAUH,KAAKV,SAAU,KAAM,GAAKU,KAAKV,WAM/D,IA0Gec,EA1GO,SAACC,GAA2B,IAArBC,EAAqBxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAUrCyC,EAAiB,CACnBC,eAAgB,mCAGZC,EAAQC,aAAaC,QAAQ,SAE/BF,GAAmB,SAAVA,IACXF,EAAchC,OAAAG,EAAA,EAAAH,CAAA,GACTgC,EADS,CAEZK,cAAe,SAAWH,KAI9B,IAvDkBI,EAuDZC,EAAOvC,OAAAG,EAAA,EAAAH,CAAA,GArBU,CACrBwC,KAAM,OACNC,MAAO,WACPC,YAAa,OACbC,SAAU,SACVC,SAAU,eAmBPb,EAHQ,CAKXc,QAAQ7C,OAAAG,EAAA,EAAAH,CAAA,GACHgC,EACAD,EAAYc,WAKbC,EACJf,GAAeA,EAAYe,QApEXR,EAoE+BP,EAAYe,SA3ExC,SAAAC,GACrB,IAAK,IAAMC,KAAOD,EAChB,GAAIA,EAAIpD,eAAeqD,GAAM,OAAO,EAEtC,OAAO,EAIIC,CAAQX,GACf,IACAtC,OAAOkD,KAAKZ,GACTa,IAAI,SAAAH,GAAG,OAAIA,EAAM,IAAMV,EAAOU,KAC9BI,KAAK,KA+D0D,GAEhEC,EAAG,GAAA1B,OApFX,SAAmBG,GACjB,GAAIA,EAAKwB,MAAM,oBAAqB,OAAOxB,EAC3C,IAAMyB,EAA2B,MAAZzB,EAAK,GAAL,IAAAH,OAAsBG,GAASA,EAEpD,SAAAH,OAAU6B,EAAO7C,SAAjBgB,OAA2B4B,GAgFZE,CAAU3B,IAAhBH,OAAwBmB,GAI3BY,EAASnB,EAAQoB,gBAAgBC,KAInCrB,EAAQoB,MAAgC,kBAAjBpB,EAAQoB,OAAsBD,IACvDnB,EAAQoB,KAAOrC,KAAKM,UAAUW,EAAQoB,OAIxC,IAAI5C,EAAW,KAEf,OACE8C,MAAMR,EAAKd,GACRuB,KAAK,SAAAC,GAWJ,OATAhD,EAAWgD,GAGE3C,OAMTL,EAASK,OAAS,KAAOL,EAASK,QAAU,IAEvCL,EAASiD,OAGM,MAApBjD,EAASK,OACJ,KAIFL,EAASkD,SAIjBH,KAAK,SAAAI,GAEJ,GAAInD,EAASK,OAAS,KAAOL,EAASK,QAAU,IAE9C,MAAM8C,EAIR,OAAOA,IAERC,MAAM,SAAAC,GAGL,MAAIrD,EACI,IAAIE,EAAJ,8BAAAU,OAC0BZ,EAASK,OADnC,KAEJgD,EACArD,EAASK,QAGL,IAAIH,EAASmD,EAAM1C,WAAY,KAAM,qBC7IxCpB,EAAU+D,6LCRVC,EAAuB,SAACC,GAAD,OAClCA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAAGC,eC2G9BC,6MAjFbC,kBAAoB,WAClBC,EAAKC,MAAMF,wGALXG,OAAOC,iBAAiB,UAAWxD,KAAKoD,mBACxCpD,KAAKoD,wDAOKK,GACV,OAAOA,EAAIP,eACT,IAAK,IACH,MAAO,OACT,QACE,OAAOL,EAAqBY,kDAIZ9E,GAGpB,SAAAuB,OAAUvB,EAAQ+E,QAAR,GAAAxD,OAAqB2C,EAAqBlE,EAAQ+E,SAAlD,KAAgE,IAA1ExD,OAA+EF,KAAK2D,YAAYhF,EAAQiF,UAAxG1D,OAAmHvB,EAAQkF,YAAc,KAAKlF,EAAQkF,YAAY,IAAM,8CAGxJ5F,GAChB,OAAOA,GACL,IAAK,QACL,IAAK,SACH,OAAO6F,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAWG,MAAM,YAC1B,IAAK,SACL,QACE,OAAOJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAcG,MAAM,8CAIxB,IAAAE,EAAApE,KACC3B,EAAW2B,KAAKsD,MAAhBjF,OAEFgG,EAAoBhG,EAAON,OAAS,GAAKM,EAAOiG,KAAK,SAACC,GAAD,OAAcA,EAAI3C,MACvE4C,EAAaH,GAAqBA,EAAkBzC,IAE1D,OACMkC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,eACfX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,OAAK,GAEPtG,EAAON,OAAS,GAChB+F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUJ,UAAU,cAClBX,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAUG,MAAM,aAEpBJ,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAcC,QAAQ,cAAcC,UAAWV,KAEjDV,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MAEA9G,EAAO+G,OAAO,SAACb,GAAD,OAAcA,EAAIc,gBAAe3D,IAAI,SAAC4D,EAAY/D,GAAb,OACnDuC,EAAAC,EAAAC,cAAA,QAAMzC,IAAKA,GAEA,GAAPA,GAAY+D,EAAM1D,MAAQvD,EAAOkD,EAAM,GAAGK,KAC1CkC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUJ,UAAU,cAClBX,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CAAUG,MAAM,aAEpBJ,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAcC,QAAQ,aAAaC,UAAWI,EAAM1D,OAEtDkC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,OAGJrB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUtD,IAAKA,EAAKkD,UAAU,cAC5BX,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACKV,EAAKmB,kBAAkBD,EAAMD,cAAcpH,SAEhD6F,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAcC,QAASpC,EAAqByC,EAAMD,cAAcpH,QAASiH,UAAWd,EAAKoB,sBAAsBF,EAAMD,kBAEvHvB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,mBA5EKM,aCPjBC,EAAgB,CACpBtC,kBTXK,WAIL,IAHAuC,EAGA7H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHU,uCACV8H,EAEA9H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFU,uCACV+H,EACA/H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADU,uCAEV,MAAO,CACLgI,MAAO,CACLvI,EACAC,EACAC,GAEFsI,QAAS,SAAAC,GAAM,OACbA,EAAM,aAAA9F,OACSyF,EADT,cAAAzF,OAC6B0F,EAD7B,cAAA1F,OACiD2F,EADjD,wBSEGI,cARS,SAACpI,GAAD,MAAuB,CAC7CQ,OAAQR,EAAMQ,OAAOA,SASrBqH,EAFaO,CAGb9C,aCOa+C,8LArBX3C,OAAOC,iBAAiB,UAAWxD,KAAKmG,uDAG3Bb,GACb,IAAI5F,EAAO4F,EAAM5F,KACb4F,GAASA,EAAM5F,MAA8B,kBAAf4F,EAAM5F,MCNrC,SAAgBoD,GACrB,IACEjD,KAAKC,MAAMgD,GACX,MAAO/C,GACP,OAAO,EAET,OAAO,EDAwDqG,CAAO1G,KAClEA,EAAOG,KAAKC,MAAMJ,qCAKpB,OACEoE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACbX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,kBACbX,EAAAC,EAAAC,cAAA,UAAQqC,GAAG,gBAAgB5B,UAAU,SAAS6B,KAAK,SAASC,IAAI,8BAhBrDd,qHEiBNe,UAAA,WAAM,IAAAC,EACeC,oBAAkB,GADjCC,EAAApI,OAAAqI,EAAA,EAAArI,CAAAkI,EAAA,GACZI,EADYF,EAAA,GACDG,EADCH,EAAA,GAAAI,EAEiBL,mBAAiB,IAFlCM,EAAAzI,OAAAqI,EAAA,EAAArI,CAAAwI,EAAA,GAEZE,EAFYD,EAAA,GAEAE,EAFAF,EAAA,GAGZ3I,EAAU8I,YAAY,SAACtJ,GAAD,MAAiB,CAACQ,OAAQR,EAAMQ,OAAOA,UAA7DA,OAgBP,OARA+I,oBAAU,WACR,IAAMC,EAAmBhJ,GAAUA,EAAON,OAAS,GAAKM,EAAOiJ,UAAUhD,KAAK,SAACC,GAAD,OAAcA,EAAI3C,MAC1FA,EAAMyF,GAAoBA,EAAiBzF,IAE7CA,IAAQqF,GACVC,EAActF,KAIhBkC,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB3D,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMC,WAAS,EAACE,MAAI,EAACC,GAAI,GAAIC,MAAO,CAACC,QAAS,cAC5C/D,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb7D,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMC,WAAS,EAACM,WAAW,UACzBhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,aACPlE,EAAAC,EAAAC,cAACiE,GAAAlE,EAAD,CAAUG,MAAM,aAElBJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAS+C,YAAY,aACrBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAASC,KAAK,QAAQlE,MAAM,WAC1BJ,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CAAYG,MAAM,YADpB,WAGAJ,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAS+C,YAAY,aACrBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQG,QAAS,kBAzBzBxB,EADoByB,GA0ByB1B,QAxB5CtD,OAAeiF,OAAOC,OAAOC,YAAY7I,KAAKM,UAAU,CAACwI,OAAQJ,IAAM,KAFrD,IAACA,GA0BsCH,KAAK,QAAQlE,MAAM,WAClE2C,EAAY/C,EAAAC,EAAAC,cAAC4E,GAAA7E,EAAD,CAAgBG,MAAM,YAAcJ,EAAAC,EAAAC,cAAC6E,GAAA9E,EAAD,CAAYG,MAAM,YADrE,aAKJJ,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX7D,EAAAC,EAAAC,cAAA,SAAOS,UAAU,UAAUqE,MAAOC,OAAO9B,GAAa+B,UAAQ,MAGpElF,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb7D,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACiF,EAAD,OAEFnF,EAAAC,EAAAC,cAACuD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACd7D,EAAAC,EAAAC,cAAA,oBACCF,EAAAC,EAAAC,cAACkF,EAAD,UC1COC,oLAdX,OACErF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,OACbX,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAUC,MAAOrJ,KAAKsD,MAAM+F,MAAO9H,IAAI,YACrCuC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAiBzK,QAASmB,KAAKsD,MAAMzE,SACnCiF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,KACEzF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOlJ,KAAK,IAAImJ,OAAK,EAACC,UAAWjD,gBAP7Bf,gBPDH,SAAwBiE,GACrC,IQTuC1D,ERSjC2D,EACJpG,OAAOqG,sCAAwCC,IAE3CC,EAAa,CAACC,IAAOC,YAAiBnL,IQZLmH,ERYgCiE,EQXhE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,SAAb,OAA4B,SAAAC,GAAI,OAAI,SAAApM,GACzC,GAAsB,oBAAXA,EACT,OAAOA,EAAOkM,EAAUC,GAFyB,IAK3CrE,EAA4B9H,EAA5B8H,QAASD,EAAmB7H,EAAnB6H,MAAUwE,EALwB/L,OAAAgM,EAAA,EAAAhM,CAKfN,EALe,qBAOnD,IAAK8H,EACH,OAAOsE,EAAKpM,GARqC,IAAAuM,EAAAjM,OAAAqI,EAAA,EAAArI,CAWfuH,EAXe,GAW5C2E,EAX4CD,EAAA,GAWnCE,EAXmCF,EAAA,GAW1BG,EAX0BH,EAAA,GAanDH,EAAK9L,OAAAG,EAAA,EAAAH,CAAA,GAAK+L,EAAN,CAAYnM,KAAMsM,KAEtB,IAAMG,EAAgB7E,EAAQC,GAgB9B,OAbA4E,EACCvI,KACC,SAAAH,GACEmI,EAAK9L,OAAAG,EAAA,EAAAH,CAAA,GAAK+L,EAAN,CAAY3L,QAASuD,EAAM/D,KAAMuM,MAEvC,SAAA/H,GACE0H,EAAK9L,OAAAG,EAAA,EAAAH,CAAA,GAAK+L,EAAN,CAAY3H,QAAOxE,KAAMwM,OAG9BjI,MAAM,SAAAC,GACL0H,EAAK9L,OAAAG,EAAA,EAAAH,CAAA,GAAK+L,EAAN,CAAY3H,QAAOxE,KAAMwM,OAG1BC,ORnBHC,EAAWlB,EAAiBmB,IAAeC,WAAf,EAAmBjB,IAE/ClL,EAAcoM,EAAkBnM,GAetC,MAAO,CAAEwK,MAbK4B,YACZrM,EACA8K,EACAmB,GAUchM,WSzBOqM,GAAlB7B,YAAOxK,cAEdsM,IAASC,OAAOtH,EAAAC,EAAAC,cAACqH,GAAD,CAAKhC,MAAOA,GAAOxK,QAASA,KAAayM,SAASC,eAAe","file":"static/js/main.179bd106.chunk.js","sourcesContent":["export const GET_TEST_SET_EVENTS = \"GET_TEST_SET_EVENTS\";\nexport const GET_TEST_SET_EVENTS_SUCCESS = \"GET_TEST_SET_EVENTS_SUCCESS\";\nexport const GET_TEST_SET_EVENTS_FAIL = \"GET_TEST_SET_EVENTS_FAILS\";\n\nexport function getTestSetEntries(\n  account = \"1a7e9a24-fc8d-4004-95d8-e7e9b8631bed\",\n  project = \"bde32948-f9b3-4d3e-bb5f-630437a0338e\",\n  testSet = \"60652b19-98f3-40b4-88f7-88c71dbc788a\"\n) {\n  return {\n    types: [\n      GET_TEST_SET_EVENTS,\n      GET_TEST_SET_EVENTS_SUCCESS,\n      GET_TEST_SET_EVENTS_FAIL\n    ],\n    promise: client =>\n      client(\n        `/accounts/${account}/projects/${project}/testSets/${testSet}/testSetEntries`\n      )\n  };\n}\n","import * as EventActions from '../actions/events';\nimport createReducer from '../createReducer';\n\nconst initialState = {\n  loading: false,\n  events: []\n};\n\nexport default createReducer(initialState, {\n  [EventActions.GET_TEST_SET_EVENTS]: state => ({\n    ...state,\n    loading: true\n  }),\n  [EventActions.GET_TEST_SET_EVENTS_SUCCESS]: (state, action) => {\n    return {\n      ...state,\n      loading: false,\n      events: action.payload\n    };\n  },\n  [EventActions.GET_TEST_SET_EVENTS_FAIL]: (state, action) => {\n    return {\n      ...state,\n      loading: false\n    };\n  }\n});\n","export default function createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport events from \"./events\";\n\nconst rootReducer = history =>\n  combineReducers({\n    events,\n    router: connectRouter(history)\n  });\n\nexport default rootReducer;\n","const environment = {\n  development: {\n    apiHost: \"http://localhost:3002/api\"\n  },\n  staging: {\n    apiHost: `/api`\n  },\n  production: {\n    apiHost: `/api`\n  }\n}[process.env.NODE_ENV || \"development\"];\n\nexport default Object.assign(\n  {\n    use_redux_devtools: false,\n    apiTimeout: {\n      response: 15000,\n      deadline: 10000\n    }\n  },\n  environment\n);\n","/* eslint-disable */\nimport config from \"../config\";\n\nfunction formatUrl(path) {\n  if (path.match(/https?|localhost/)) return path;\n  const adjustedPath = path[0] !== \"/\" ? `/${path}` : path;\n\n  return `${config.apiHost}${adjustedPath}`;\n}\n\nexport const isEmpty = obj => {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n  return true;\n};\n\nconst queryString = params =>\n  params && !isEmpty(params)\n    ? \"?\" +\n      Object.keys(params)\n        .map(key => key + \"=\" + params[key])\n        .join(\"&\")\n    : \"\";\n\n// Custom API error to throw\nexport function ApiError(message, data, status) {\n  let response = null;\n  let isObject = false;\n\n  // We are trying to parse response\n  try {\n    response = JSON.parse(data);\n    isObject = true;\n  } catch (e) {\n    response = data;\n  }\n\n  this.response = response;\n  this.message = message;\n  this.status = status;\n  this.toString = function() {\n    return `${this.message}\\nResponse:\\n${\n      isObject ? JSON.stringify(this.response, null, 2) : this.response\n    }`;\n  };\n}\n\n// API wrapper function\nconst fetchResource = (path, userOptions = {}) => {\n  // Define default options\n  const defaultOptions = {\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"omit\", // include, same-origin, *omit\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\" // no-referrer, *client\n  };\n  // Define default headers\n  let defaultHeaders = {\n    \"Content-Type\": \"application/json; charset=utf-8\"\n  };\n\n  const token = localStorage.getItem(\"token\");\n\n  if (token && token !== \"null\") {\n    defaultHeaders = {\n      ...defaultHeaders,\n      authorization: \"Token \" + token\n    };\n  }\n\n  const options = {\n    // Merge options\n    ...defaultOptions,\n    ...userOptions,\n    // Merge headers\n    headers: {\n      ...defaultHeaders,\n      ...userOptions.headers\n    }\n  };\n\n  // Build Url\n  const query =\n    userOptions && userOptions.query ? queryString(userOptions.query) : \"\";\n\n  const url = `${formatUrl(path)}${query}`;\n  // const url = `${ API_URL }${ path }${ query }`;\n\n  // Detect is we are uploading a file\n  const isFile = options.body instanceof File;\n\n  // Stringify JSON data\n  // If body is not a file\n  if (options.body && typeof options.body === \"object\" && !isFile) {\n    options.body = JSON.stringify(options.body);\n  }\n\n  // Variable which will be used for storing response\n  let response = null;\n\n  return (\n    fetch(url, options)\n      .then(responseObject => {\n        // Saving response for later use in lower scopes\n        response = responseObject;\n\n        // HTTP unauthorized\n        if (response.status === 401) {\n          // Handle unauthorized requests\n          // Maybe redirect to login page?\n        }\n\n        // Check for error HTTP error codes\n        if (response.status < 200 || response.status >= 300) {\n          // Get response as text\n          return response.text();\n        }\n\n        if (response.status === 204) {\n          return null;\n        }\n\n        // Get response as json\n        return response.json();\n      })\n      // \"parsedResponse\" will be either text or javascript object depending if\n      // \"response.text()\" or \"response.json()\" got called in the upper scope\n      .then(parsedResponse => {\n        // Check for HTTP error codes\n        if (response.status < 200 || response.status >= 300) {\n          // Throw error\n          throw parsedResponse;\n        }\n\n        // Request succeeded\n        return parsedResponse;\n      })\n      .catch(error => {\n        // Throw custom API error\n        // If response exists it means HTTP error occured\n        if (response) {\n          throw new ApiError(\n            `Request failed with status ${response.status}.`,\n            error,\n            response.status\n          );\n        } else {\n          throw new ApiError(error.toString(), null, \"REQUEST_FAILED\");\n        }\n      })\n  );\n};\n\nexport default fetchResource;\n","import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers/reducer\";\nimport thunk from \"redux-thunk\";\nimport createMiddleware from \"./middleware/clientMiddleware\";\nimport api from \"./ApiClient\";\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const middleware = [thunk, routerMiddleware(history), createMiddleware(api)];\n  const enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n  const rootReducer = createRootReducer(history);\n\n  const store = createStore(\n    rootReducer, // root reducer with router state\n    preloadedState,\n    enhancer\n  );\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept(\"./reducers/reducer\", () => {\n      store.replaceReducer(createRootReducer(history));\n    });\n  }\n\n  return { store, history };\n}\n","export const upperCaseFirstLetter = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './reporter.css';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport MouseIcon from '@material-ui/icons/MouseSharp';\nimport HttpIcon from '@material-ui/icons/Http';\nimport Divider from '@material-ui/core/Divider';\nimport {upperCaseFirstLetter} from '../utils/string';\nimport {EventTypes} from '../Types/events';\n\ntype Props = {\n  events: any;\n  getTestSetEntries: Function;\n};\n\n\nclass Reporter extends Component<Props> {\n  componentDidMount() {    \n    window.addEventListener(\"message\", this.getTestSetEntries); \n    this.getTestSetEntries();\n  }\n\n  getTestSetEntries = () => {\n    this.props.getTestSetEntries();\n  };\n\n  prettifyTag(tag: string) {\n    switch(tag.toLowerCase()) {\n      case 'a':\n        return 'Link';\n      default: \n        return upperCaseFirstLetter(tag);  \n    }\n  }\n\n  generateSecondaryText(payload: any) : String {\n    \n    // const component =     \n    return `${payload.tagType ? `${upperCaseFirstLetter(payload.tagType)} ` : ''}${this.prettifyTag(payload.tagName)}${payload.textContent ? ' \"'+payload.textContent+'\"' : ''}`\n  }\n\n  getIconFromAction(action : EventTypes) : any {\n    switch(action) {\n      case 'click':\n      case 'select':\n        return <MouseIcon color=\"primary\" />;\n      case 'change':\n      default:  \n        return <KeyboardIcon color=\"primary\" />;\n    }\n  }\n\n  render() {\n    const { events } = this.props;\n\n    const firstEventWithUrl = events.length > 0 && events.find((evt: any) => evt.url);\n    const initialUrl = firstEventWithUrl && firstEventWithUrl.url;\n\n    return (\n          <div className=\"events-list\">\n          <List dense>\n            {\n              events.length > 0 &&\n              <>\n                <ListItem className=\"event-item\">\n                  <ListItemIcon>\n                      <HttpIcon color=\"primary\"/>\n                  </ListItemIcon>\n                  <ListItemText primary=\"Initial URL\" secondary={initialUrl}  />\n                </ListItem>\n                <Divider/>\n              {\n                events.filter((evt: any) => evt.event_payload).map((event: any, key: number) => (\n                <span key={key}>\n                  {\n                    key != 0 && event.url !== events[key - 1].url &&\n                    <>\n                      <ListItem className=\"event-item\">\n                        <ListItemIcon>\n                            <HttpIcon color=\"primary\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"URL Change\" secondary={event.url}  />\n                      </ListItem>\n                      <Divider/>\n                    </>\n                  }\n                  <ListItem key={key} className=\"event-item\">\n                    <ListItemIcon>\n                        {this.getIconFromAction(event.event_payload.action)}\n                    </ListItemIcon>\n                    <ListItemText primary={upperCaseFirstLetter(event.event_payload.action)} secondary={this.generateSecondaryText(event.event_payload)} />\n                  </ListItem>\n                  <Divider/>\n                </span>\n                ))}\n              </>\n              }\n          </List>\n          </div>\n    );\n  }\n}\n\nexport default Reporter;\n","\nimport { connect } from 'react-redux';\nimport {getTestSetEntries} from '../redux/actions/events';\nimport Reporter from './Reporter';\n\ntype RootState = {\n  loading: boolean,\n  events: any\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  events: state.events.events,\n});\n\nconst dispatchProps = {\n  getTestSetEntries: getTestSetEntries,\n};\n\nexport default connect(\n  mapStateToProps,\n  dispatchProps\n)(Reporter)\n","import React, { Component } from 'react';\nimport './Runner.scss';\nimport {isJson} from './utils';\n\n\nclass Runner extends Component {\n  componentDidMount(): void {\n    window.addEventListener(\"message\", this.receiveMessage);\n  }\n\n  receiveMessage(event: any) {      \n    let data = event.data;\n    if (event && event.data && typeof event.data === 'string' && isJson(data)) {\n      data = JSON.parse(data);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"runner\">        \n        <div className=\"size-container\">\n          <iframe id=\"runner-iframe\" className=\"iframe\" name=\"runner\" src=\"//localhost:3000\" />\n          </div>        \n      </div>\n    );\n  }\n}\n\nexport default Runner;","export function getIframe(): HTMLElement | null {\n  const doc = window.document.getElementById('runner-iframe');\n\n  return doc;\n}\n\nexport function isJson(str: string) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n","import React, {useState, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport Reporter from '../Reporter';\nimport Runner from '../Runner';\n\nimport Button from '@material-ui/core/Button';\nimport {Link} from 'react-router-dom';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport Fab from '@material-ui/core/Fab';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport AssertIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport StopAssertIcon from '@material-ui/icons/HighlightOff';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\n\nimport './styles.css';\n\n //export default () => {return (<Runner/>)}\n\n\n\nexport default () => {\n  const [asserting, setAsserting] = useState<Boolean>(false);\n  const [currentUrl, setCurrentUrl] = useState<String>('');\n  const {events} = useSelector((state: any) => ({events: state.events.events}));\n  \n\n  const toggleAssert = (on: Boolean) => {\n    setAsserting(on);\n    (window as any).frames.runner.postMessage(JSON.stringify({assert: on}), '*');\n  };\n\n  useEffect(() => {\n    const lastEventWithUrl = events && events.length > 0 && events.reverse().find((evt: any) => evt.url);\n    const url = lastEventWithUrl && lastEventWithUrl.url;\n    \n    if (url !== currentUrl)\n      setCurrentUrl(url);\n  });  \n\n  return (\n    <Grid container spacing={2}>\n      <Grid container item xs={12} style={{padding: '15px 15px'}}>\n        <Grid item xs={4}>  \n          <Grid container alignItems=\"center\">\n            <Link to='/testsets'>\n              <BackIcon color=\"primary\" />\n            </Link>\n            <Divider orientation=\"vertical\" />\n            <Button  size=\"small\" color=\"default\">\n              <ReplayIcon color=\"primary\"/> Replay\n            </Button>\n            <Divider orientation=\"vertical\" />\n            <Button onClick={() => toggleAssert(!asserting)}  size=\"small\" color=\"default\">\n              {asserting ? <StopAssertIcon color=\"primary\"/> : <AssertIcon color=\"primary\"/>} Assert\n            </Button>\n          </Grid>         \n        </Grid>  \n        <Grid item xs={8}>\n            <input className=\"url-bar\" value={String(currentUrl)} disabled/>\n        </Grid>        \n      </Grid> \n      <Grid item xs={4}>   \n        <h3>Events</h3>     \n        <Reporter />\n      </Grid>\n      <Grid item xs={8}>\n       <h3>Runner</h3>         \n        <Runner />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Window from './Types';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport TestEditor from './TestEditor'\n\n\nclass App extends Component<any> {\n  render() {\n    return (\n      <div className=\"App\">    \n        <Provider store={this.props.store} key=\"provider\">\n          <ConnectedRouter history={this.props.history}>\n            <Switch>              \n              <Route path=\"/\" exact component={TestEditor} />\n            </Switch>          \n          </ConnectedRouter>  \n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// import {logout} from '../actions/auth';\n\nexport default function clientMiddleware(client) {\n  return ({ dispatch, getState }) => next => action => {\n    if (typeof action === \"function\") {\n      return action(dispatch, getState);\n    }\n\n    const { promise, types, ...rest } = action; // eslint-disable-line no-redeclare\n\n    if (!promise) {\n      return next(action);\n    }\n\n    const [REQUEST, SUCCESS, FAILURE] = types;\n\n    next({ ...rest, type: REQUEST });\n\n    const actionPromise = promise(client);\n\n    // actionPromise is a 'then'-able promise\n    actionPromise\n    .then(\n      body => {\n        next({ ...rest, payload: body, type: SUCCESS });\n      },\n      error => {\n        next({ ...rest, error, type: FAILURE });\n      }\n    )\n      .catch(error => {\n        next({ ...rest, error, type: FAILURE });\n      });\n\n    return actionPromise;\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport configureStore from './redux/configureStore';\nimport './index.css';\nimport App from './App';\n\n\nconst {store, history} = configureStore();\n\nReactDOM.render(<App store={store} history={history} />, document.getElementById('root'));\n"],"sourceRoot":""}