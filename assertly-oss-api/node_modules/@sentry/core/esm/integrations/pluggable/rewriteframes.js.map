{"version":3,"file":"rewriteframes.js","sourceRoot":"","sources":["../../../src/integrations/pluggable/rewriteframes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,uBAAuB,EAAE,aAAa,EAAE,MAAM,aAAa,CAAC;AAErE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAIxD,iCAAiC;AACjC,MAAM,OAAO,aAAa;IA2BxB;;OAEG;IACH,YAAmB,UAA4D,EAAE;QA7BjF;;WAEG;QACI,SAAI,GAAW,aAAa,CAAC,EAAE,CAAC;QAYvC;;WAEG;QACc,aAAQ,GAAuB,KAAK,EAAE,KAAiB,EAAE,EAAE;YAC1E,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACpD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACxF,KAAK,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,CAAC;aACnC;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAMA,IAAI,OAAO,CAAC,IAAI,EAAE;YAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;SAC1B;QACD,IAAI,OAAO,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;SAClC;IACH,CAAC;IAED;;OAEG;IACI,SAAS;QACd,uBAAuB,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE;YACpC,MAAM,IAAI,GAAG,aAAa,EAAE,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;YAC3D,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC5B;YACD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;IACL,KAAK,CAAC,OAAO,CAAC,KAAkB;QACrC,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,MAAM,EAAE;YACV,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;gBACtB,2BAA2B;gBAC3B,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5C;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,YAAY;IACJ,kBAAkB,CAAC,KAAkB;QAC3C,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAElC,IAAI,SAAS,EAAE;YACb,IAAI;gBACF,yCAAyC;gBACzC,OAAQ,SAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;aACvD;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,SAAS,CAAC;aAClB;SACF;aAAM,IAAI,KAAK,CAAC,UAAU,EAAE;YAC3B,OAAO,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC;SAChC;aAAM;YACL,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;;AA1ED;;GAEG;AACW,gBAAE,GAAW,eAAe,CAAC","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, SentryEvent, StackFrame } from '@sentry/types';\nimport { basename, relative } from '@sentry/utils/path';\n\ntype StackFrameIteratee = (frame: StackFrame) => Promise<StackFrame>;\n\n/** Rewrite event frames paths */\nexport class RewriteFrames implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = RewriteFrames.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'RewriteFrames';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly root?: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly iteratee: StackFrameIteratee = async (frame: StackFrame) => {\n    if (frame.filename && frame.filename.startsWith('/')) {\n      const base = this.root ? relative(this.root, frame.filename) : basename(frame.filename);\n      frame.filename = `app:///${base}`;\n    }\n    return frame;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { root?: string; iteratee?: StackFrameIteratee } = {}) {\n    if (options.root) {\n      this.root = options.root;\n    }\n    if (options.iteratee) {\n      this.iteratee = options.iteratee;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor(async event => {\n      const self = getCurrentHub().getIntegration(RewriteFrames);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  public async process(event: SentryEvent): Promise<SentryEvent> {\n    const frames = this.getFramesFromEvent(event);\n    if (frames) {\n      for (const i in frames) {\n        // tslint:disable-next-line\n        frames[i] = await this.iteratee(frames[i]);\n      }\n    }\n    return event;\n  }\n\n  /** JSDoc */\n  private getFramesFromEvent(event: SentryEvent): StackFrame[] | undefined {\n    const exception = event.exception;\n\n    if (exception) {\n      try {\n        // tslint:disable-next-line:no-unsafe-any\n        return (exception as any).values[0].stacktrace.frames;\n      } catch (_oO) {\n        return undefined;\n      }\n    } else if (event.stacktrace) {\n      return event.stacktrace.frames;\n    } else {\n      return undefined;\n    }\n  }\n}\n"]}