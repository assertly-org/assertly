{"version":3,"file":"logger.js","sourceRoot":"","sources":["../src/logger.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,MAAM,QAAQ,CAAC;AAEzD,+DAA+D;AAC/D,MAAM,MAAM,GAAG,eAAe,EAAY,CAAC;AAE3C,YAAY;AACZ,MAAM,MAAM;IAIV,YAAY;IACZ;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,YAAY;IACL,OAAO;QACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,YAAY;IACL,MAAM;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,YAAY;IACL,GAAG,CAAC,GAAG,IAAW;QACvB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,cAAc,CAAC,GAAG,EAAE;YAClB,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,iCAAiC;QACjG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;IACL,IAAI,CAAC,GAAG,IAAW;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,cAAc,CAAC,GAAG,EAAE;YAClB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,yBAAyB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,iCAAiC;QACnG,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;IACL,KAAK,CAAC,GAAG,IAAW;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,cAAc,CAAC,GAAG,EAAE;YAClB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,0BAA0B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,iCAAiC;QACrG,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAE5B,OAAO,EAAE,MAAM,EAAE,CAAC","sourcesContent":["import { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject() as Window;\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this.enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this.enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this.enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this.enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`Sentry Logger [Log]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this.enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`Sentry Logger [Warn]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this.enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`Sentry Logger [Error]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n}\n\nconst logger = new Logger();\n\nexport { logger };\n"]}